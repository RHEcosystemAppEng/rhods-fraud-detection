---
apiVersion: charts.starburstdata.com/v1alpha1
kind: StarburstEnterprise
metadata:
  name: starburstenterprise
spec:
  starburstPlatformLicense: starburstdata
  initImage:
    pullPolicy: IfNotPresent
    repository: registry.connect.redhat.com/starburst/starburst-enterprise-init
    tag: 1.3.2
  image:
    pullPolicy: IfNotPresent
    repository: registry.connect.redhat.com/starburst/starburst-enterprise
    tag: 402-e.1
  envFrom:
    - secretRef:
        name: aws-credentials
    - secretRef:
        name: postgres-credentials
  catalogs:
    s3: |-
      connector.name=hive
      hive.metastore.uri=thrift://hive:9083
      hive.s3.aws-access-key=${ENV:AWS_ACCESS_KEY}
      hive.s3.aws-secret-key=${ENV:AWS_SECRET_KEY}
      hive.non-managed-table-writes-enabled=true
      hive.allow-drop-table=true
      hive.metastore-cache-ttl=60m
      hive.compression-codec=none
      materialized-views.enabled=true
      materialized-views.namespace=mv
      materialized-views.storage-schema=mvstorage
      cache-service.uri=http://coordinator.starburst.svc.cluster.local:8180
    postgres: |-
      connector.name=postgresql
      connection-url=jdbc:postgresql://${ENV:POSTGRES_HOST}:${ENV:POSTGRES_PORT}/
      connection-password=${ENV:POSTGRES_PASSWORD}
      connection-user=${ENV:POSTGRES_USER}
  coordinator:
    envFrom:
      - secretRef:
          name: aws-credentials
      - secretRef:
          name: postgres-credentials
    heapHeadroomPercentage: 30
    heapSizePercentage: 90
    nodeMemoryHeadroom: 1Gi
    expose:
      clusterIp:
        name: starburst
        ports:
          http:
            port: 8080
    etcFiles:
      jvm.config: |
        -server
        -XX:G1HeapRegionSize=32M
        -XX:+ExplicitGCInvokesConcurrent
        -XX:+ExitOnOutOfMemoryError
        -XX:+HeapDumpOnOutOfMemoryError
        -XX:-OmitStackTraceInFastThrow
        -XX:ReservedCodeCacheSize=512M
        -XX:PerMethodRecompilationCutoff=10000
        -XX:PerBytecodeRecompilationCutoff=10000
        -Djdk.attach.allowAttachSelf=true
        -Djdk.nio.maxCachedBufferSize=2000000
        -XX:+UnlockDiagnosticVMOptions
        -XX:+UseAESCTRIntrinsics
        --add-opens=java.base/sun.nio.ch=ALL-UNNAMED
        --add-opens=java.base/java.nio=ALL-UNNAMED
        --add-opens=java.base/java.lang=ALL-UNNAMED
        --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED
        -XX:-UseBiasedLocking
        -XX:+UseG1GC
      other: { }
      properties:
        config.properties: |
          coordinator=true
          node-scheduler.include-coordinator=false
          http-server.http.port=8080
          discovery.uri=http://localhost:8080
        log.properties: |
          # Enable verbose logging from Starburst Enterprise
          #io.trino=DEBUG
          #com.starburstdata.presto=DEBUG
        node.properties: |
          node.environment={{ include "starburst.environment" . }}
          node.data-dir=/data/starburst
          plugin.dir=/usr/lib/starburst/plugin
          node.server-log-file=/var/log/starburst/server.log
          node.launcher-log-file=/var/log/starburst/launcher.log
        cache.properties:
          service-database.user=postgres
          service-database.password=postgres
          service-database.jdbc-url=jdbc:postgresql://postgresql.starburst.svc.cluster.local:5432/
          starburst.user=user
          starburst.jdbc-url=jdbc:trino://coordinator:8080
    resources:
      limits:
        cpu: 0.5
        memory: 2Gi
      requests:
        cpu: 0.5
        memory: 2Gi
  worker:
    envFrom:
      - secretRef:
          name: aws-credentials
    autoscaling:
      enabled: false
      maxReplicas: 100
      minReplicas: 1
      targetCPUUtilizationPercentage: 80
    deploymentTerminationGracePeriodSeconds: 300
    heapHeadroomPercentage: 30
    heapSizePercentage: 90
    nodeMemoryHeadroom: 1Gi
    prestoWorkerShutdownGracePeriodSeconds: 120
    replicas: 1
    resources:
      limits:
        cpu: 0.5
        memory: 2Gi
      requests:
        cpu: 0.5
        memory: 2Gi
